{"ast":null,"code":"import { postActions } from \"../slices/postSlice\";\nimport request from \"../../utils/request\";\nimport { toast } from \"react-toastify\";\n\n// Create New Post\nexport function createPost(postData) {\n  return async (dispatch, getState) => {\n    try {\n      dispatch(postActions.setLoading());\n      const {\n        data\n      } = await request.post(\"/api/posts\", postData, {\n        headers: {\n          Authorization: \"Bearer \" + getState().auth.user.token,\n          \"Content-Type\": \"application/json\" // تأكد من أن نوع المحتوى هو JSON\n        }\n      });\n      dispatch(postActions.createPostSuccess(data));\n      toast.success(\"Post created successfully!\");\n    } catch (error) {\n      toast.error(error.response.data.message);\n      dispatch(postActions.clearLoading());\n    }\n  };\n}","map":{"version":3,"names":["postActions","request","toast","createPost","postData","dispatch","getState","setLoading","data","post","headers","Authorization","auth","user","token","createPostSuccess","success","error","response","message","clearLoading"],"sources":["D:/Blog-pro/frontend/src/redux/apiCalls/postApiCall.js"],"sourcesContent":["import { postActions } from \"../slices/postSlice\";\nimport request from \"../../utils/request\";\nimport { toast } from \"react-toastify\";\n\n// Create New Post\nexport function createPost(postData) {\n  return async (dispatch, getState) => {\n    try {\n      dispatch(postActions.setLoading());\n      const { data } = await request.post(\n        \"/api/posts\",\n        postData,\n        {\n          headers: {\n            Authorization: \"Bearer \" + getState().auth.user.token,\n            \"Content-Type\": \"application/json\", // تأكد من أن نوع المحتوى هو JSON\n          },\n        }\n      );\n      dispatch(postActions.createPostSuccess(data));\n      toast.success(\"Post created successfully!\");\n    } catch (error) {\n      toast.error(error.response.data.message);\n      dispatch(postActions.clearLoading());\n    }\n  };\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,qBAAqB;AACjD,OAAOC,OAAO,MAAM,qBAAqB;AACzC,SAASC,KAAK,QAAQ,gBAAgB;;AAEtC;AACA,OAAO,SAASC,UAAUA,CAACC,QAAQ,EAAE;EACnC,OAAO,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACFD,QAAQ,CAACL,WAAW,CAACO,UAAU,CAAC,CAAC,CAAC;MAClC,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMP,OAAO,CAACQ,IAAI,CACjC,YAAY,EACZL,QAAQ,EACR;QACEM,OAAO,EAAE;UACPC,aAAa,EAAE,SAAS,GAAGL,QAAQ,CAAC,CAAC,CAACM,IAAI,CAACC,IAAI,CAACC,KAAK;UACrD,cAAc,EAAE,kBAAkB,CAAE;QACtC;MACF,CACF,CAAC;MACDT,QAAQ,CAACL,WAAW,CAACe,iBAAiB,CAACP,IAAI,CAAC,CAAC;MAC7CN,KAAK,CAACc,OAAO,CAAC,4BAA4B,CAAC;IAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdf,KAAK,CAACe,KAAK,CAACA,KAAK,CAACC,QAAQ,CAACV,IAAI,CAACW,OAAO,CAAC;MACxCd,QAAQ,CAACL,WAAW,CAACoB,YAAY,CAAC,CAAC,CAAC;IACtC;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}