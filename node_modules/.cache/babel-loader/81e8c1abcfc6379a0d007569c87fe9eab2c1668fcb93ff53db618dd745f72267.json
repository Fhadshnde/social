{"ast":null,"code":"import { passwordActions } from \"../slices/passwordSlice\";\nimport request from \"../../utils/request\";\nimport { toast } from \"react-toastify\";\n\n// Forgot Password\nexport function forgotPassword(email) {\n  return async () => {\n    try {\n      const {\n        data\n      } = await request.post(\"/api/password/reset-password-link\", {\n        email\n      });\n      toast.success(data.message);\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n// Get Reset Password\nexport function getResetPassword(userId, token) {\n  return async dispatch => {\n    try {\n      await request.get(`/api/password/reset-password/${userId}/${token}`);\n    } catch (error) {\n      console.log(error);\n      dispatch(passwordActions.setError());\n    }\n  };\n}\n\n// Reset The Password\nexport function resetPassword(newPassword, user) {\n  return async () => {\n    try {\n      const {\n        data\n      } = await request.post(`/api/password/reset-password/${user.userId}/${user.token}`, {\n        password: newPassword\n      });\n      toast.success(data.message);\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}","map":{"version":3,"names":["passwordActions","request","toast","forgotPassword","email","data","post","success","message","error","response","getResetPassword","userId","token","dispatch","get","console","log","setError","resetPassword","newPassword","user","password"],"sources":["D:/Blog-pro/frontend/src/redux/apiCalls/passwordApiCall.js"],"sourcesContent":["import { passwordActions } from \"../slices/passwordSlice\";\nimport request from \"../../utils/request\";\nimport { toast } from \"react-toastify\";\n\n// Forgot Password\nexport function forgotPassword(email) {\n    return async () => {\n      try {\n        const { data } = await request.post(\"/api/password/reset-password-link\",{ email });\n        toast.success(data.message);\n      } catch (error) {\n        toast.error(error.response.data.message);\n      }\n    }\n}\n\n// Get Reset Password\nexport function getResetPassword(userId, token) {\n    return async (dispatch) => {\n      try {\n        await request.get(`/api/password/reset-password/${userId}/${token}`);\n      } catch (error) {\n        console.log(error);\n        dispatch(passwordActions.setError());\n      }\n    }\n}\n\n// Reset The Password\nexport function resetPassword(newPassword, user) {\n    return async () => {\n      try {\n        const { data } = await request.post(\n            `/api/password/reset-password/${user.userId}/${user.token}`, \n            { password: newPassword }\n            );\n        toast.success(data.message);\n      } catch (error) {\n        toast.error(error.response.data.message);\n      }\n    }\n}"],"mappings":"AAAA,SAASA,eAAe,QAAQ,yBAAyB;AACzD,OAAOC,OAAO,MAAM,qBAAqB;AACzC,SAASC,KAAK,QAAQ,gBAAgB;;AAEtC;AACA,OAAO,SAASC,cAAcA,CAACC,KAAK,EAAE;EAClC,OAAO,YAAY;IACjB,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMJ,OAAO,CAACK,IAAI,CAAC,mCAAmC,EAAC;QAAEF;MAAM,CAAC,CAAC;MAClFF,KAAK,CAACK,OAAO,CAACF,IAAI,CAACG,OAAO,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdP,KAAK,CAACO,KAAK,CAACA,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACG,OAAO,CAAC;IAC1C;EACF,CAAC;AACL;;AAEA;AACA,OAAO,SAASG,gBAAgBA,CAACC,MAAM,EAAEC,KAAK,EAAE;EAC5C,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF,MAAMb,OAAO,CAACc,GAAG,CAAC,gCAAgCH,MAAM,IAAIC,KAAK,EAAE,CAAC;IACtE,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdO,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;MAClBK,QAAQ,CAACd,eAAe,CAACkB,QAAQ,CAAC,CAAC,CAAC;IACtC;EACF,CAAC;AACL;;AAEA;AACA,OAAO,SAASC,aAAaA,CAACC,WAAW,EAAEC,IAAI,EAAE;EAC7C,OAAO,YAAY;IACjB,IAAI;MACF,MAAM;QAAEhB;MAAK,CAAC,GAAG,MAAMJ,OAAO,CAACK,IAAI,CAC/B,gCAAgCe,IAAI,CAACT,MAAM,IAAIS,IAAI,CAACR,KAAK,EAAE,EAC3D;QAAES,QAAQ,EAAEF;MAAY,CACxB,CAAC;MACLlB,KAAK,CAACK,OAAO,CAACF,IAAI,CAACG,OAAO,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdP,KAAK,CAACO,KAAK,CAACA,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACG,OAAO,CAAC;IAC1C;EACF,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}