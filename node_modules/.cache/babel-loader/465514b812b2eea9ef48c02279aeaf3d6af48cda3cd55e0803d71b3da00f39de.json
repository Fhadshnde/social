{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null,\n    registerMessage: null,\n    isEmailVerified: false\n  },\n  reducers: {\n    login(state, action) {\n      state.user = action.payload;\n      state.registerMessage = null;\n    },\n    logout(state) {\n      state.user = null;\n    },\n    register(state, action) {\n      state.registerMessage = action.payload;\n    },\n    setUserPhoto(state, action) {\n      state.user.profilePhoto = action.payload;\n    },\n    setUsername(state, action) {\n      state.user.username = action.payload;\n    },\n    setIsEmailVerified(state) {\n      state.isEmailVerified = true;\n      state.registerMessage = null;\n    }\n  }\n});\nconst authReducer = authSlice.reducer;\nconst authActions = authSlice.actions;\nexport { authActions, authReducer };","map":{"version":3,"names":["createSlice","authSlice","name","initialState","user","localStorage","getItem","JSON","parse","registerMessage","isEmailVerified","reducers","login","state","action","payload","logout","register","setUserPhoto","profilePhoto","setUsername","username","setIsEmailVerified","authReducer","reducer","authActions","actions"],"sources":["D:/Blog-pro/frontend/src/redux/slices/authSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst authSlice = createSlice({\n   name: \"auth\",\n   initialState: {\n    user: localStorage.getItem(\"userInfo\") ?\n    JSON.parse(localStorage.getItem(\"userInfo\")) : null,\n    registerMessage: null,\n    isEmailVerified: false,\n   },\n   reducers: {\n      login(state,action) {\n        state.user = action.payload;\n        state.registerMessage = null;\n      },\n      logout(state) {\n         state.user = null;\n      },\n      register(state,action) {\n         state.registerMessage = action.payload;\n      },\n      setUserPhoto(state,action) {\n         state.user.profilePhoto = action.payload;\n      },\n      setUsername(state,action) {\n         state.user.username = action.payload;\n      },\n      setIsEmailVerified(state) {\n         state.isEmailVerified = true;\n         state.registerMessage = null;\n      }\n   }\n});\n\nconst authReducer = authSlice.reducer;\nconst authActions = authSlice.actions;\n\nexport { authActions, authReducer }"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC3BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACbC,IAAI,EAAEC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACtCC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI;IACnDG,eAAe,EAAE,IAAI;IACrBC,eAAe,EAAE;EAClB,CAAC;EACDC,QAAQ,EAAE;IACPC,KAAKA,CAACC,KAAK,EAACC,MAAM,EAAE;MAClBD,KAAK,CAACT,IAAI,GAAGU,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACJ,eAAe,GAAG,IAAI;IAC9B,CAAC;IACDO,MAAMA,CAACH,KAAK,EAAE;MACXA,KAAK,CAACT,IAAI,GAAG,IAAI;IACpB,CAAC;IACDa,QAAQA,CAACJ,KAAK,EAACC,MAAM,EAAE;MACpBD,KAAK,CAACJ,eAAe,GAAGK,MAAM,CAACC,OAAO;IACzC,CAAC;IACDG,YAAYA,CAACL,KAAK,EAACC,MAAM,EAAE;MACxBD,KAAK,CAACT,IAAI,CAACe,YAAY,GAAGL,MAAM,CAACC,OAAO;IAC3C,CAAC;IACDK,WAAWA,CAACP,KAAK,EAACC,MAAM,EAAE;MACvBD,KAAK,CAACT,IAAI,CAACiB,QAAQ,GAAGP,MAAM,CAACC,OAAO;IACvC,CAAC;IACDO,kBAAkBA,CAACT,KAAK,EAAE;MACvBA,KAAK,CAACH,eAAe,GAAG,IAAI;MAC5BG,KAAK,CAACJ,eAAe,GAAG,IAAI;IAC/B;EACH;AACH,CAAC,CAAC;AAEF,MAAMc,WAAW,GAAGtB,SAAS,CAACuB,OAAO;AACrC,MAAMC,WAAW,GAAGxB,SAAS,CAACyB,OAAO;AAErC,SAASD,WAAW,EAAEF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}